
///// Generated Rust API /////

//// Classes ////

{% for class in api.classes %}

struct {{ class.name | case(style="pascal") }} {
{%- for var in class.variables -%}
    {{ var.name | case(style="snake") }}: {{ types.rs[var.type] }},
{%- else -%}
    // (no fields)
{%- endfor -%}
}
impl {{ class.name | case(style="pascal") }} {
    {%- for func in class.functions %}
    {%- if func.from is defined and func.from %}
    pub fn {{ func.name | case(style="snake") }}(
        {%- for param in func.params -%}
        {{ param.name | case(style="snake") }}: {{ types.rs[param.type] }}
        {%- if not loop.last %}, {% endif -%}
        {%- endfor -%}
    )
    {%- if func.returns != "void" -%} -> {{ types.rs[func.returns] }} {%- endif -%}
    {
        {{ func.from }}(
            {%- for param in func.params -%}
            {{ param.name | case(style="snake") }}
            {%- if not loop.last %}, {% endif -%}
            {%- endfor -%}
        )
    }
    {%- else -%}
    // FIXME: No wasm binding defined for {{ func_name }}
    {%- endif -%}
    {%- endfor -%}


    {%- for method in class.methods %}
    {% if method.from is defined and method.from -%}
    pub fn {{ method.name | case(style="snake") }}(&self
    {%- for param in method.params -%}
    , {{ param.name | case(style="snake") }}: {{ types.rs[param.type] }}
    {%- endfor -%}
    )
    {%- if method.returns != "void" -%} -> {{ types.rs[method.returns] }} {%- endif -%}
    {
        {{ method.from }}(self
            {%- for param in method.params -%}
            , {{ param.name | case(style="snake") }}
            {%- endfor -%}
        )
    }
    {%- else -%}
    // FIXME: No wasm binding defined for {{ method.name }}
    {%- endif -%}
    {%- endfor %}
}

{%- endfor %}

//// Functions ////
{% for func in api.functions %}
{%- if func.from is defined and func.from %}
pub fn {{ func.name | case(style="snake") }}(
    {%- for param in func.params -%}
    {{ param.name | case(style="snake") }}: {{ types.rs[param.type] }}
    {%- if not loop.last %}, {% endif -%}
    {%- endfor -%}
)
{%- if func.returns != "void" -%} -> {{ types.rs[func.returns] }} {%- endif -%}
{
    {{ func.from }}(
        {%- for param in func.params -%}
        {{ param.name | case(style="snake") }}
        {%- if not loop.last %}, {% endif -%}
        {%- endfor -%}
    )
}
{%- else %}
// FIXME: No wasm binding defined for {{ func.name }}
{%- endif %}

{%- endfor -%}


