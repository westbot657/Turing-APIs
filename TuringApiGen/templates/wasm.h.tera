
//// Wasm Bindings ////

#ifdef __cplusplus
extern "C" {
#endif

void _host_strcpy(const char* location, uint32_t size);
{% for func in api.functions %}
{%- if func.from is defined and func.from -%}
{% if func.type == "String" %}uint32_t{% else %}{{ types.c[func.type] }}{% endif %} {{ func.from }}(
    {%- for param in func.params -%}
    {{ types.c[param.type] }} {{ param.name | case(style="snake") }}
    {%- if not loop.last %}, {% endif -%}
    {%- endfor -%}
);
{% endif -%}
{%- endfor %}

{% for class in api.classes %}
{%- for func in class.functions -%}
{%- if func.from is defined and func.from -%}
{% if func.type == "String" %}uint32_t{% else %}{{ types.c[func.type] }}{% endif %} {{ func.from }}(
    {%- for param in func.params -%}
    {{ types.c[param.type] }} {{ param.name | case(style="snake") }}
    {%- if not loop.last %}, {% endif -%}
    {%- endfor -%}
);
{% endif -%}
{%- endfor -%}
{%- for func in class.methods -%}
{% if func.from is defined and func.from %}
{% if func.type == "String" %}uint32_t{% else %}{{ types.c[func.type] }}{% endif %} {{ func.from }}({% if class.is_opaque %}const void* {% else %}{{ class.name | case(style="pascal") }} {% endif %}opaqu
    {%- for param in func.params -%}
    , {% if param.type == "&str" %}const char*{% else %}{{ types.c[param.type] }}{% endif %} {{ param.name | case(style="snake") }}
    {%- endfor -%}
);
{% endif -%}
{%- endfor -%}

{%- endfor %}

#ifdef __cplusplus
}
#endif
