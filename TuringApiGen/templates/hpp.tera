
///// Generated C++ API Headers /////
#pragma once
#include <string>
#include <vector>
#include <cstring>
#include <cstdint>
#include "api.wasm.h"


//// Functions ////
{% for func in api.functions %}
{%- if func.from is defined and func.from -%}
inline {{ types.cpp[func.type] }} {{ func.name | case(style="camel") }}(
    {%- for param in func.params -%}
    {{ types.cpp[param.type] }} {{ param.name | case(style="snake") }}
    {%- if not loop.last %}, {% endif -%}
    {%- endfor -%}
) {
    {% if func.type == "String" %}uint32_t turing_strlen = {% elif func.type in api.opaque_classes %}void* opaqu = {% elif func.type != "void" %}return {% endif -%}
    {{ func.from }}(
        {%- for param in func.params -%}
        {{ param.name | case(style="snake") }}{%- if param.type == "&str" -%}.c_str(){%- elif param.type in api.opaque_classes -%}.opaqu{%- endif -%}
        {%- endfor -%}
    );
    {% if func.type == "String" -%}
    std::vector<char> turing_buf(turing_strlen);
    _host_strcpy(turing_buf.data(), turing_strlen);
    return std::string(buf.data());
    {% elif func.type in api.opaque_classes -%}
    {{ func.type | case(style="pascal") }} turing_ret{opaqu};
    return turing_ret;
    {% endif -%}
}
{%- endif -%}
{%- endfor -%}








