
///// Generated C API /////
#include <stdint.h>

//// Functions ////
{% for func in api.functions %}
{%- if func.from is defined and func.from -%}
{{ types.c[func.type] }} {{ func.name | case(style="camel") }}(
    {%- for param in func.params -%}
    {{ types.c[param.type] }} {{ param.name | case(style="snake") }}
    {%- if not loop.last %}, {% endif -%}
    {%- endfor -%}
) {
    {%- if func.type != "void" -%}return {% endif -%}
    {{ func.from }}(
        {%- for param in func.params -%}
        {{ param.name | case(style="snake") }}
        {%- if not loop.last %}, {% endif -%}
        {%- endfor -%}
    );
}

{%- else %}
// FIXME: No wasm binding defined for {{ func.name }}
{%- endif %}

{%- endfor %}


//// Classes ////
{%- for class in api.classes %}

typedef struct {
{%- for var in class.variables %}
    {{ types.c[var.type] }} {{ var.name | case(style="snake") }};
{%- else %}
    // No fields
{% endfor -%}
} {{ class.name | case(style="pascal") }};
{% if class.functions -%}
// {{ class.name | case(style="pascal") }} functions
{%- endif %}
{% for func in class.functions %}
{%-if func.from is defined and func.from %}
{{ func.type }} {{ func.name }}(
    {%- for param in func.params -%}
    {{ types.c[param.type] }} {{ param.name | case(style="snake") }}
    {%- if not loop.last %}, {% endif -%}
    {%- endfor -%}
) {
    {% if func.type != "void" -%}return {% endif -%}
    {{ func.from }}(
        {%- for param in func.params -%}
        {{ param.name | case(style="snake") }}
        {%- if not loop.last %}, {% endif -%}
        {%- endfor -%}
    );
}
{% else -%}
// FIXME: No wasm binding defined for {{ func.name }}
{%- endif -%}
{%- endfor -%}

{%- if class.methods -%}
// {{ class.name | case(style="pascal") }} methods
{%- endif %}
{% for func in class.methods %}
{%-if func.from is defined and func.from %}
{{ func.type }} {{ func.name }}({{ class.name | case(style="pascal") }}* self
    {%- for param in func.params -%}
    , {{ types.c[param.type] }} {{ param.name | case(style="snake") }}
    {%- endfor -%}
) {
    {% if func.type != "void" -%}return {% endif -%}
    {{ func.from }}(self{% if class.is_opaque %}->opaque{% endif %}
        {%- for param in func.params -%}
        , {{ param.name | case(style="snake") }}
        {%- endfor -%}
    );
}
{%- else -%}
// FIXME: No wasm binding defined for {{ func.name }}
{%- endif -%}
{%- endfor -%}


{%- endfor %}


